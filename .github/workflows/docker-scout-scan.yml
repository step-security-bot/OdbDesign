name: Docker Scout Scan

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "development", "main", "release" ]
  pull_request:
    branches: [ "development", "main", "release" ]
   
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}  
  #VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  # Use `latest` as the tag to compare to if empty, assuming that it's already pushed
  COMPARE_TAG: latest
  DOCKERFILE: Dockerfile_OdbDesignServer

permissions:
  contents: read

jobs:
  build:
    name: Docker-Scout-Scan

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      pull-requests: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      # add problem matchers
      - name: Add Problem Matchers
        uses: ammaraskar/gcc-problem-matcher@d1fed1fac9e94d30e23b5a82dba4e2963e71d2e7 # master

    #   # Install the cosign tool except on PR
    #   # https://github.com/sigstore/cosign-installer
    #   - name: Install cosign
    #     if: github.event_name != 'pull_request'
    #     uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
    #     with:
    #       cosign-release: 'v1.13.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # # Login against GHCR Docker registry except on PR
      # # https://github.com/docker/login-action
      # - name: Log into GHCR registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # Login against Docker Hub to allow running Docker Scout
      # https://github.com/docker/login-action
      - name: Log into Docker Hub registry
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:          
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch,suffix=-${{github.run_number}}              

      # Build Docker image with Buildx (don't push)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .          
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ env.DOCKERFILE }}
          load: true          
          build-args: |
            OWNER=nam20485
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            VCPKG_BINARY_SOURCES=clear;nuget,GitHub,readwrite

      - name: List Local Images
        run: docker image ls

    #   # Sign the resulting Docker image digest except on PRs.
    #   # This will only write to the public Rekor transparency log when the Docker
    #   # repository is public to avoid leaking data.  If you would like to publish
    #   # transparency data even for private images, pass --force to cosign below.
    #   # https://github.com/sigstore/cosign
    #   - name: Sign the published Docker image
    #     if: ${{ github.event_name != 'pull_request' }}
    #     env:
    #       COSIGN_EXPERIMENTAL: "true"
    #     # This step uses the identity token to provision an ephemeral certificate
    #     # against the sigstore community Fulcio instance.
    #     run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

      - name: Analyze for critical and high CVEs
        id: docker-scout-cves       
        # if: ${{ github.event_name != 'pull_request_target' }} 
        uses: docker/scout-action@4e9ac4df44fb56797da111fce8185f7fbffd5a09 # v1.0.9
        with:
          command: cves,recommendations
          image: ${{ steps.meta.outputs.tags }}
          sarif-file: sarif.output.json
          summary: true
          keep-previous-comments: true
        
      - name: Upload SARIF result
        id: upload-sarif
        uses: github/codeql-action/upload-sarif@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        with:
          sarif_file: sarif.output.json
      
      - name: Docker Scout Compare to Latest
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@4e9ac4df44fb56797da111fce8185f7fbffd5a09 # v1.0.9
        with:
          command: compare
          image: ${{ steps.meta.outputs.tags }}
          to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.base_ref }}-${{ env.COMPARE_TAG }}
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment
